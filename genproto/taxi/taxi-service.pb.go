// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: taxi/taxi-service.proto

package taxi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TaxiToken struct {
	RefreshToken         string   `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaxiToken) Reset()         { *m = TaxiToken{} }
func (m *TaxiToken) String() string { return proto.CompactTextString(m) }
func (*TaxiToken) ProtoMessage()    {}
func (*TaxiToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{0}
}
func (m *TaxiToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaxiToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaxiToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaxiToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaxiToken.Merge(m, src)
}
func (m *TaxiToken) XXX_Size() int {
	return m.Size()
}
func (m *TaxiToken) XXX_DiscardUnknown() {
	xxx_messageInfo_TaxiToken.DiscardUnknown(m)
}

var xxx_messageInfo_TaxiToken proto.InternalMessageInfo

func (m *TaxiToken) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type EmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailRequest) Reset()         { *m = EmailRequest{} }
func (m *EmailRequest) String() string { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()    {}
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{1}
}
func (m *EmailRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmailRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailRequest.Merge(m, src)
}
func (m *EmailRequest) XXX_Size() int {
	return m.Size()
}
func (m *EmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailRequest proto.InternalMessageInfo

func (m *EmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *EmailRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CheckTaxi struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckTaxi) Reset()         { *m = CheckTaxi{} }
func (m *CheckTaxi) String() string { return proto.CompactTextString(m) }
func (*CheckTaxi) ProtoMessage()    {}
func (*CheckTaxi) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{2}
}
func (m *CheckTaxi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckTaxi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckTaxi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckTaxi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckTaxi.Merge(m, src)
}
func (m *CheckTaxi) XXX_Size() int {
	return m.Size()
}
func (m *CheckTaxi) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckTaxi.DiscardUnknown(m)
}

var xxx_messageInfo_CheckTaxi proto.InternalMessageInfo

func (m *CheckTaxi) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *CheckTaxi) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CheckRes struct {
	Exists               bool     `protobuf:"varint,1,opt,name=exists,proto3" json:"exists"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckRes) Reset()         { *m = CheckRes{} }
func (m *CheckRes) String() string { return proto.CompactTextString(m) }
func (*CheckRes) ProtoMessage()    {}
func (*CheckRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{3}
}
func (m *CheckRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CheckRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CheckRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CheckRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckRes.Merge(m, src)
}
func (m *CheckRes) XXX_Size() int {
	return m.Size()
}
func (m *CheckRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckRes.DiscardUnknown(m)
}

var xxx_messageInfo_CheckRes proto.InternalMessageInfo

func (m *CheckRes) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

type GetAllTaxisRequest struct {
	Page                 int64    `protobuf:"varint,1,opt,name=page,proto3" json:"page"`
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTaxisRequest) Reset()         { *m = GetAllTaxisRequest{} }
func (m *GetAllTaxisRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllTaxisRequest) ProtoMessage()    {}
func (*GetAllTaxisRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{4}
}
func (m *GetAllTaxisRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAllTaxisRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAllTaxisRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAllTaxisRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTaxisRequest.Merge(m, src)
}
func (m *GetAllTaxisRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetAllTaxisRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTaxisRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTaxisRequest proto.InternalMessageInfo

func (m *GetAllTaxisRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetAllTaxisRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAllTaxisResponse struct {
	AllTaxis             []*Taxi  `protobuf:"bytes,1,rep,name=allTaxis,proto3" json:"allTaxis"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTaxisResponse) Reset()         { *m = GetAllTaxisResponse{} }
func (m *GetAllTaxisResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllTaxisResponse) ProtoMessage()    {}
func (*GetAllTaxisResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{5}
}
func (m *GetAllTaxisResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetAllTaxisResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetAllTaxisResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetAllTaxisResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTaxisResponse.Merge(m, src)
}
func (m *GetAllTaxisResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetAllTaxisResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTaxisResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTaxisResponse proto.InternalMessageInfo

func (m *GetAllTaxisResponse) GetAllTaxis() []*Taxi {
	if m != nil {
		return m.AllTaxis
	}
	return nil
}

type TaxiRequest struct {
	TaxiId               string   `protobuf:"bytes,1,opt,name=taxiId,proto3" json:"taxiId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaxiRequest) Reset()         { *m = TaxiRequest{} }
func (m *TaxiRequest) String() string { return proto.CompactTextString(m) }
func (*TaxiRequest) ProtoMessage()    {}
func (*TaxiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{6}
}
func (m *TaxiRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TaxiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TaxiRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TaxiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaxiRequest.Merge(m, src)
}
func (m *TaxiRequest) XXX_Size() int {
	return m.Size()
}
func (m *TaxiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaxiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaxiRequest proto.InternalMessageInfo

func (m *TaxiRequest) GetTaxiId() string {
	if m != nil {
		return m.TaxiId
	}
	return ""
}

type Taxi struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password"`
	Birthday             string   `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday"`
	CarId                string   `protobuf:"bytes,7,opt,name=car_id,json=carId,proto3" json:"car_id"`
	PhoneNumber          string   `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number"`
	Gender               string   `protobuf:"bytes,9,opt,name=gender,proto3" json:"gender"`
	ProfilePhoto         string   `protobuf:"bytes,10,opt,name=profile_photo,json=profilePhoto,proto3" json:"profile_photo"`
	CreatedAt            string   `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt            string   `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	DeletedAt            string   `protobuf:"bytes,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at"`
	RefreshToken         string   `protobuf:"bytes,14,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Taxi) Reset()         { *m = Taxi{} }
func (m *Taxi) String() string { return proto.CompactTextString(m) }
func (*Taxi) ProtoMessage()    {}
func (*Taxi) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{7}
}
func (m *Taxi) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Taxi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Taxi.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Taxi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Taxi.Merge(m, src)
}
func (m *Taxi) XXX_Size() int {
	return m.Size()
}
func (m *Taxi) XXX_DiscardUnknown() {
	xxx_messageInfo_Taxi.DiscardUnknown(m)
}

var xxx_messageInfo_Taxi proto.InternalMessageInfo

func (m *Taxi) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Taxi) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Taxi) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Taxi) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Taxi) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Taxi) GetBirthday() string {
	if m != nil {
		return m.Birthday
	}
	return ""
}

func (m *Taxi) GetCarId() string {
	if m != nil {
		return m.CarId
	}
	return ""
}

func (m *Taxi) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *Taxi) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Taxi) GetProfilePhoto() string {
	if m != nil {
		return m.ProfilePhoto
	}
	return ""
}

func (m *Taxi) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Taxi) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Taxi) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

func (m *Taxi) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type Review struct {
	TaxiId               string   `protobuf:"bytes,1,opt,name=taxi_id,json=taxiId,proto3" json:"taxi_id"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id"`
	Comment              string   `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment"`
	Stars                string   `protobuf:"bytes,4,opt,name=stars,proto3" json:"stars"`
	CreatedAt            string   `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt            string   `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	DeletedAt            string   `protobuf:"bytes,7,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Review) Reset()         { *m = Review{} }
func (m *Review) String() string { return proto.CompactTextString(m) }
func (*Review) ProtoMessage()    {}
func (*Review) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{8}
}
func (m *Review) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Review) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Review.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Review) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Review.Merge(m, src)
}
func (m *Review) XXX_Size() int {
	return m.Size()
}
func (m *Review) XXX_DiscardUnknown() {
	xxx_messageInfo_Review.DiscardUnknown(m)
}

var xxx_messageInfo_Review proto.InternalMessageInfo

func (m *Review) GetTaxiId() string {
	if m != nil {
		return m.TaxiId
	}
	return ""
}

func (m *Review) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Review) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Review) GetStars() string {
	if m != nil {
		return m.Stars
	}
	return ""
}

func (m *Review) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Review) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Review) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

type Car struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Model                string   `protobuf:"bytes,2,opt,name=model,proto3" json:"model"`
	ImageUrl             string   `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	Colour               string   `protobuf:"bytes,4,opt,name=colour,proto3" json:"colour"`
	NumberPassenger      uint32   `protobuf:"varint,5,opt,name=number_passenger,json=numberPassenger,proto3" json:"number_passenger"`
	NumberBags           uint32   `protobuf:"varint,6,opt,name=number_bags,json=numberBags,proto3" json:"number_bags"`
	Number               string   `protobuf:"bytes,7,opt,name=number,proto3" json:"number"`
	FreeDays             string   `protobuf:"bytes,8,opt,name=free_days,json=freeDays,proto3" json:"free_days"`
	FromLocation         string   `protobuf:"bytes,9,opt,name=from_location,json=fromLocation,proto3" json:"from_location"`
	ToLocation           string   `protobuf:"bytes,10,opt,name=to_location,json=toLocation,proto3" json:"to_location"`
	Price                uint64   `protobuf:"varint,11,opt,name=price,proto3" json:"price"`
	CreatedAt            string   `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt            string   `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	DeletedAt            string   `protobuf:"bytes,14,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Car) Reset()         { *m = Car{} }
func (m *Car) String() string { return proto.CompactTextString(m) }
func (*Car) ProtoMessage()    {}
func (*Car) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c98a41eee6dafff, []int{9}
}
func (m *Car) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Car) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Car.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Car) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Car.Merge(m, src)
}
func (m *Car) XXX_Size() int {
	return m.Size()
}
func (m *Car) XXX_DiscardUnknown() {
	xxx_messageInfo_Car.DiscardUnknown(m)
}

var xxx_messageInfo_Car proto.InternalMessageInfo

func (m *Car) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Car) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Car) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *Car) GetColour() string {
	if m != nil {
		return m.Colour
	}
	return ""
}

func (m *Car) GetNumberPassenger() uint32 {
	if m != nil {
		return m.NumberPassenger
	}
	return 0
}

func (m *Car) GetNumberBags() uint32 {
	if m != nil {
		return m.NumberBags
	}
	return 0
}

func (m *Car) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Car) GetFreeDays() string {
	if m != nil {
		return m.FreeDays
	}
	return ""
}

func (m *Car) GetFromLocation() string {
	if m != nil {
		return m.FromLocation
	}
	return ""
}

func (m *Car) GetToLocation() string {
	if m != nil {
		return m.ToLocation
	}
	return ""
}

func (m *Car) GetPrice() uint64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Car) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Car) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *Car) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

func init() {
	proto.RegisterType((*TaxiToken)(nil), "taxi.TaxiToken")
	proto.RegisterType((*EmailRequest)(nil), "taxi.EmailRequest")
	proto.RegisterType((*CheckTaxi)(nil), "taxi.CheckTaxi")
	proto.RegisterType((*CheckRes)(nil), "taxi.CheckRes")
	proto.RegisterType((*GetAllTaxisRequest)(nil), "taxi.GetAllTaxisRequest")
	proto.RegisterType((*GetAllTaxisResponse)(nil), "taxi.GetAllTaxisResponse")
	proto.RegisterType((*TaxiRequest)(nil), "taxi.TaxiRequest")
	proto.RegisterType((*Taxi)(nil), "taxi.Taxi")
	proto.RegisterType((*Review)(nil), "taxi.Review")
	proto.RegisterType((*Car)(nil), "taxi.Car")
}

func init() { proto.RegisterFile("taxi/taxi-service.proto", fileDescriptor_7c98a41eee6dafff) }

var fileDescriptor_7c98a41eee6dafff = []byte{
	// 829 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xc6, 0x59, 0x7b, 0x63, 0x1f, 0xff, 0x14, 0x86, 0xb4, 0x59, 0x82, 0x08, 0x61, 0xf9, 0x2b,
	0x17, 0x0d, 0x55, 0x41, 0xe2, 0xaa, 0x88, 0x24, 0x85, 0x28, 0x12, 0xaa, 0xaa, 0xa5, 0xbd, 0xe1,
	0x66, 0x35, 0xde, 0x3d, 0xb6, 0x47, 0xdd, 0xdd, 0x59, 0x66, 0xc6, 0x69, 0xfc, 0x26, 0xc0, 0x0b,
	0xc1, 0x25, 0x8f, 0x80, 0xc2, 0x3b, 0x70, 0x8d, 0xce, 0xcc, 0xac, 0xb1, 0x9d, 0xc6, 0xbd, 0xb1,
	0xfc, 0x7d, 0xdf, 0x39, 0x33, 0x73, 0xe6, 0x3b, 0x7b, 0x06, 0xf6, 0x0d, 0xbf, 0x12, 0x5f, 0xd2,
	0xcf, 0x03, 0x8d, 0xea, 0x52, 0x64, 0x78, 0x5c, 0x2b, 0x69, 0x24, 0x6b, 0x13, 0x17, 0x3f, 0x84,
	0xde, 0x73, 0x7e, 0x25, 0x9e, 0xcb, 0x97, 0x58, 0xb1, 0x8f, 0x61, 0xa8, 0x70, 0xa2, 0x50, 0xcf,
	0x52, 0x43, 0x44, 0xd4, 0x3a, 0x6a, 0xdd, 0xef, 0x25, 0x03, 0x4f, 0xda, 0xa0, 0xf8, 0x3b, 0x18,
	0x7c, 0x5f, 0x72, 0x51, 0x24, 0xf8, 0xcb, 0x1c, 0xb5, 0x61, 0x7b, 0xd0, 0x41, 0xc2, 0x3e, 0xd8,
	0x01, 0x76, 0x00, 0xdd, 0x9a, 0x6b, 0xfd, 0x4a, 0xaa, 0x3c, 0xda, 0xb1, 0xc2, 0x12, 0xc7, 0xdf,
	0x40, 0xef, 0x6c, 0x86, 0xd9, 0x4b, 0xda, 0x98, 0xd2, 0x27, 0x02, 0x8b, 0xbc, 0x49, 0xb7, 0x80,
	0xd8, 0x4b, 0x5e, 0xcc, 0xd1, 0xe7, 0x3a, 0x10, 0xc7, 0xd0, 0xb5, 0x89, 0x09, 0x6a, 0x76, 0x0f,
	0x42, 0xbc, 0x12, 0xda, 0x68, 0x9b, 0xd8, 0x4d, 0x3c, 0x8a, 0xbf, 0x05, 0x76, 0x8e, 0xe6, 0xa4,
	0x28, 0x68, 0x75, 0xdd, 0x1c, 0x92, 0x41, 0xbb, 0xe6, 0x53, 0xb4, 0xb1, 0x41, 0x62, 0xff, 0xd3,
	0x1e, 0x85, 0x28, 0x85, 0xb1, 0x7b, 0x04, 0x89, 0x03, 0xf1, 0x63, 0x78, 0x77, 0x2d, 0x5f, 0xd7,
	0xb2, 0xd2, 0xc8, 0x3e, 0x83, 0x2e, 0xf7, 0x5c, 0xd4, 0x3a, 0x0a, 0xee, 0xf7, 0x1f, 0xc1, 0x31,
	0x5d, 0xe0, 0x31, 0x51, 0xc9, 0x52, 0x8b, 0x3f, 0x85, 0xbe, 0x65, 0xfc, 0xbe, 0xf7, 0x20, 0xa4,
	0xa8, 0x8b, 0xa6, 0x3c, 0x8f, 0xe2, 0xdf, 0x02, 0x68, 0xdb, 0xf2, 0x47, 0xb0, 0x23, 0x1a, 0x71,
	0x47, 0xe4, 0xec, 0x03, 0x80, 0x89, 0x50, 0xda, 0xa4, 0x15, 0x2f, 0x9b, 0xea, 0x7b, 0x96, 0x79,
	0xca, 0x4b, 0x64, 0xef, 0x43, 0xaf, 0xe0, 0x8d, 0x1a, 0xb8, 0x7b, 0x25, 0xc2, 0x8a, 0x4b, 0x27,
	0xda, 0xb7, 0x39, 0xd1, 0x59, 0x77, 0x82, 0xb4, 0xb1, 0x50, 0x66, 0x96, 0xf3, 0x45, 0x14, 0x3a,
	0xad, 0xc1, 0xec, 0x2e, 0x84, 0x19, 0x57, 0xa9, 0xc8, 0xa3, 0x5d, 0xb7, 0x5c, 0xc6, 0xd5, 0x45,
	0xce, 0x3e, 0x82, 0x41, 0x3d, 0x93, 0x15, 0xa6, 0xd5, 0xbc, 0x1c, 0xa3, 0x8a, 0xba, 0x56, 0xec,
	0x5b, 0xee, 0xa9, 0xa5, 0xa8, 0xe8, 0x29, 0x56, 0x39, 0xaa, 0xa8, 0xe7, 0x8a, 0x76, 0x88, 0xda,
	0xab, 0x56, 0x72, 0x22, 0x0a, 0x4c, 0xeb, 0x99, 0x34, 0x32, 0x02, 0xd7, 0x5e, 0x9e, 0x7c, 0x46,
	0x1c, 0x5d, 0x40, 0xa6, 0x90, 0x1b, 0xcc, 0x53, 0x6e, 0xa2, 0xbe, 0xbb, 0x00, 0xcf, 0x9c, 0x18,
	0x92, 0xe7, 0x75, 0xde, 0xc8, 0x03, 0x27, 0x7b, 0xc6, 0xc9, 0x39, 0x16, 0xe8, 0xe5, 0xa1, 0x93,
	0x3d, 0x73, 0x62, 0x6e, 0x36, 0xf8, 0xe8, 0x35, 0x0d, 0xfe, 0x47, 0x0b, 0xc2, 0x04, 0x2f, 0x05,
	0xbe, 0x62, 0xfb, 0xb0, 0x4b, 0x86, 0xa5, 0x62, 0xc3, 0x3f, 0x12, 0xe6, 0x1a, 0xed, 0xed, 0x38,
	0x8f, 0x42, 0x82, 0x17, 0x39, 0x8b, 0x60, 0x37, 0x93, 0x65, 0x89, 0x95, 0xf1, 0xf6, 0x34, 0x90,
	0xdc, 0xd1, 0x86, 0x2b, 0xdd, 0xb8, 0x63, 0xc1, 0x46, 0xb9, 0x9d, 0xed, 0xe5, 0x86, 0xdb, 0xcb,
	0xdd, 0xdd, 0x28, 0x37, 0xfe, 0x3d, 0x80, 0xe0, 0x8c, 0xab, 0x1b, 0x4d, 0xb6, 0x07, 0x9d, 0x52,
	0xe6, 0x58, 0x34, 0x5f, 0x97, 0x05, 0xd4, 0x5b, 0xa2, 0xe4, 0x53, 0x4c, 0xe7, 0xaa, 0x68, 0x7a,
	0xcb, 0x12, 0x2f, 0x54, 0x41, 0x9e, 0x66, 0xb2, 0x90, 0x73, 0xe5, 0x8f, 0xef, 0x11, 0xfb, 0x02,
	0xde, 0x76, 0x8d, 0x90, 0x52, 0x53, 0x61, 0x35, 0x45, 0x65, 0xab, 0x18, 0x26, 0x77, 0x1c, 0xff,
	0xac, 0xa1, 0xd9, 0x87, 0xd0, 0xf7, 0xa1, 0x63, 0x3e, 0xd5, 0xb6, 0x98, 0x61, 0x02, 0x8e, 0x3a,
	0xe5, 0x53, 0xfb, 0x49, 0xfb, 0xa6, 0x72, 0x95, 0x78, 0x44, 0x07, 0x9b, 0x28, 0xc4, 0x34, 0xe7,
	0x0b, 0xed, 0xfb, 0xad, 0x4b, 0xc4, 0x13, 0xbe, 0xd0, 0x64, 0xe9, 0x44, 0xc9, 0x32, 0x2d, 0x64,
	0xc6, 0x8d, 0x90, 0x95, 0xef, 0xb9, 0x01, 0x91, 0x3f, 0x7a, 0x8e, 0xb6, 0x36, 0xf2, 0xff, 0x10,
	0xd7, 0x77, 0x60, 0xe4, 0x32, 0x60, 0x0f, 0x3a, 0xb5, 0x12, 0x19, 0xda, 0x86, 0x6b, 0x27, 0x0e,
	0x6c, 0x98, 0x33, 0xd8, 0x6e, 0xce, 0x70, 0xbb, 0x39, 0xa3, 0x0d, 0x73, 0x1e, 0xfd, 0xbb, 0xe3,
	0x46, 0xc5, 0x4f, 0x6e, 0x2a, 0xb3, 0x23, 0x08, 0xcf, 0xec, 0xd2, 0x6c, 0x65, 0xb2, 0x1c, 0xac,
	0xfc, 0xa7, 0x88, 0x17, 0x76, 0xf5, 0x5b, 0x23, 0x3e, 0x87, 0xf0, 0x89, 0xdd, 0x80, 0xbd, 0xb3,
	0x32, 0x9d, 0xdc, 0x2c, 0x5a, 0x0b, 0xfc, 0x04, 0x82, 0x73, 0x34, 0x6f, 0x8a, 0x7a, 0x0c, 0xa1,
	0x9b, 0x85, 0x2c, 0x72, 0xec, 0xcd, 0xc9, 0x7a, 0xf0, 0xde, 0x6b, 0x14, 0x3f, 0x33, 0x1f, 0x00,
	0xd8, 0x71, 0xfd, 0x83, 0x1d, 0xe9, 0x77, 0x5c, 0xe0, 0x72, 0xf2, 0x1f, 0x8c, 0x56, 0x08, 0x9a,
	0xe8, 0x0f, 0x61, 0x74, 0x8e, 0x86, 0xa4, 0xd3, 0x85, 0x7d, 0x61, 0x18, 0x73, 0x11, 0xab, 0xcf,
	0xcd, 0xda, 0xf9, 0xbe, 0x86, 0xbb, 0xcb, 0x8c, 0x64, 0xe5, 0x13, 0x6e, 0xf6, 0x5a, 0xbe, 0x6c,
	0xab, 0x59, 0xa7, 0xfb, 0x7f, 0x5e, 0x1f, 0xb6, 0xfe, 0xba, 0x3e, 0x6c, 0xfd, 0x7d, 0x7d, 0xd8,
	0xfa, 0xf5, 0x9f, 0xc3, 0xb7, 0x7e, 0xee, 0xd8, 0xf7, 0x71, 0x1c, 0xda, 0x87, 0xf1, 0xab, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x35, 0xee, 0x15, 0x45, 0x33, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaxiServiceClient is the client API for TaxiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaxiServiceClient interface {
	Create(ctx context.Context, in *Taxi, opts ...grpc.CallOption) (*Taxi, error)
	Update(ctx context.Context, in *Taxi, opts ...grpc.CallOption) (*Taxi, error)
	Delete(ctx context.Context, in *TaxiRequest, opts ...grpc.CallOption) (*Taxi, error)
	Get(ctx context.Context, in *TaxiRequest, opts ...grpc.CallOption) (*Taxi, error)
	GetAll(ctx context.Context, in *GetAllTaxisRequest, opts ...grpc.CallOption) (*GetAllTaxisResponse, error)
	CheckField(ctx context.Context, in *CheckTaxi, opts ...grpc.CallOption) (*CheckRes, error)
	GetTaxiByEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Taxi, error)
	GetTaxiByRefreshToken(ctx context.Context, in *TaxiToken, opts ...grpc.CallOption) (*Taxi, error)
}

type taxiServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaxiServiceClient(cc *grpc.ClientConn) TaxiServiceClient {
	return &taxiServiceClient{cc}
}

func (c *taxiServiceClient) Create(ctx context.Context, in *Taxi, opts ...grpc.CallOption) (*Taxi, error) {
	out := new(Taxi)
	err := c.cc.Invoke(ctx, "/taxi.TaxiService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiServiceClient) Update(ctx context.Context, in *Taxi, opts ...grpc.CallOption) (*Taxi, error) {
	out := new(Taxi)
	err := c.cc.Invoke(ctx, "/taxi.TaxiService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiServiceClient) Delete(ctx context.Context, in *TaxiRequest, opts ...grpc.CallOption) (*Taxi, error) {
	out := new(Taxi)
	err := c.cc.Invoke(ctx, "/taxi.TaxiService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiServiceClient) Get(ctx context.Context, in *TaxiRequest, opts ...grpc.CallOption) (*Taxi, error) {
	out := new(Taxi)
	err := c.cc.Invoke(ctx, "/taxi.TaxiService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiServiceClient) GetAll(ctx context.Context, in *GetAllTaxisRequest, opts ...grpc.CallOption) (*GetAllTaxisResponse, error) {
	out := new(GetAllTaxisResponse)
	err := c.cc.Invoke(ctx, "/taxi.TaxiService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiServiceClient) CheckField(ctx context.Context, in *CheckTaxi, opts ...grpc.CallOption) (*CheckRes, error) {
	out := new(CheckRes)
	err := c.cc.Invoke(ctx, "/taxi.TaxiService/CheckField", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiServiceClient) GetTaxiByEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Taxi, error) {
	out := new(Taxi)
	err := c.cc.Invoke(ctx, "/taxi.TaxiService/GetTaxiByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taxiServiceClient) GetTaxiByRefreshToken(ctx context.Context, in *TaxiToken, opts ...grpc.CallOption) (*Taxi, error) {
	out := new(Taxi)
	err := c.cc.Invoke(ctx, "/taxi.TaxiService/GetTaxiByRefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaxiServiceServer is the server API for TaxiService service.
type TaxiServiceServer interface {
	Create(context.Context, *Taxi) (*Taxi, error)
	Update(context.Context, *Taxi) (*Taxi, error)
	Delete(context.Context, *TaxiRequest) (*Taxi, error)
	Get(context.Context, *TaxiRequest) (*Taxi, error)
	GetAll(context.Context, *GetAllTaxisRequest) (*GetAllTaxisResponse, error)
	CheckField(context.Context, *CheckTaxi) (*CheckRes, error)
	GetTaxiByEmail(context.Context, *EmailRequest) (*Taxi, error)
	GetTaxiByRefreshToken(context.Context, *TaxiToken) (*Taxi, error)
}

// UnimplementedTaxiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaxiServiceServer struct {
}

func (*UnimplementedTaxiServiceServer) Create(ctx context.Context, req *Taxi) (*Taxi, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTaxiServiceServer) Update(ctx context.Context, req *Taxi) (*Taxi, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTaxiServiceServer) Delete(ctx context.Context, req *TaxiRequest) (*Taxi, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTaxiServiceServer) Get(ctx context.Context, req *TaxiRequest) (*Taxi, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTaxiServiceServer) GetAll(ctx context.Context, req *GetAllTaxisRequest) (*GetAllTaxisResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedTaxiServiceServer) CheckField(ctx context.Context, req *CheckTaxi) (*CheckRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckField not implemented")
}
func (*UnimplementedTaxiServiceServer) GetTaxiByEmail(ctx context.Context, req *EmailRequest) (*Taxi, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaxiByEmail not implemented")
}
func (*UnimplementedTaxiServiceServer) GetTaxiByRefreshToken(ctx context.Context, req *TaxiToken) (*Taxi, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaxiByRefreshToken not implemented")
}

func RegisterTaxiServiceServer(s *grpc.Server, srv TaxiServiceServer) {
	s.RegisterService(&_TaxiService_serviceDesc, srv)
}

func _TaxiService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Taxi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi.TaxiService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServiceServer).Create(ctx, req.(*Taxi))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaxiService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Taxi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi.TaxiService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServiceServer).Update(ctx, req.(*Taxi))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaxiService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaxiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi.TaxiService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServiceServer).Delete(ctx, req.(*TaxiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaxiService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaxiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi.TaxiService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServiceServer).Get(ctx, req.(*TaxiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaxiService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTaxisRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi.TaxiService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServiceServer).GetAll(ctx, req.(*GetAllTaxisRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaxiService_CheckField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckTaxi)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServiceServer).CheckField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi.TaxiService/CheckField",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServiceServer).CheckField(ctx, req.(*CheckTaxi))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaxiService_GetTaxiByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServiceServer).GetTaxiByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi.TaxiService/GetTaxiByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServiceServer).GetTaxiByEmail(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TaxiService_GetTaxiByRefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaxiToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiServiceServer).GetTaxiByRefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taxi.TaxiService/GetTaxiByRefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiServiceServer).GetTaxiByRefreshToken(ctx, req.(*TaxiToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaxiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taxi.TaxiService",
	HandlerType: (*TaxiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _TaxiService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TaxiService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TaxiService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TaxiService_Get_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _TaxiService_GetAll_Handler,
		},
		{
			MethodName: "CheckField",
			Handler:    _TaxiService_CheckField_Handler,
		},
		{
			MethodName: "GetTaxiByEmail",
			Handler:    _TaxiService_GetTaxiByEmail_Handler,
		},
		{
			MethodName: "GetTaxiByRefreshToken",
			Handler:    _TaxiService_GetTaxiByRefreshToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "taxi/taxi-service.proto",
}

func (m *TaxiToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaxiToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TaxiToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RefreshToken) > 0 {
		i -= len(m.RefreshToken)
		copy(dAtA[i:], m.RefreshToken)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.RefreshToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *EmailRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmailRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmailRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CheckTaxi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckTaxi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckTaxi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Field) > 0 {
		i -= len(m.Field)
		copy(dAtA[i:], m.Field)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Field)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CheckRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CheckRes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CheckRes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Exists {
		i--
		if m.Exists {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetAllTaxisRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAllTaxisRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAllTaxisRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limit != 0 {
		i = encodeVarintTaxiService(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x10
	}
	if m.Page != 0 {
		i = encodeVarintTaxiService(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetAllTaxisResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetAllTaxisResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetAllTaxisResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AllTaxis) > 0 {
		for iNdEx := len(m.AllTaxis) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AllTaxis[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTaxiService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TaxiRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TaxiRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TaxiRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.TaxiId) > 0 {
		i -= len(m.TaxiId)
		copy(dAtA[i:], m.TaxiId)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.TaxiId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Taxi) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Taxi) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Taxi) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RefreshToken) > 0 {
		i -= len(m.RefreshToken)
		copy(dAtA[i:], m.RefreshToken)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.RefreshToken)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.DeletedAt) > 0 {
		i -= len(m.DeletedAt)
		copy(dAtA[i:], m.DeletedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.DeletedAt)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.UpdatedAt) > 0 {
		i -= len(m.UpdatedAt)
		copy(dAtA[i:], m.UpdatedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.UpdatedAt)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ProfilePhoto) > 0 {
		i -= len(m.ProfilePhoto)
		copy(dAtA[i:], m.ProfilePhoto)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.ProfilePhoto)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Gender) > 0 {
		i -= len(m.Gender)
		copy(dAtA[i:], m.Gender)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Gender)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.PhoneNumber) > 0 {
		i -= len(m.PhoneNumber)
		copy(dAtA[i:], m.PhoneNumber)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.PhoneNumber)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CarId) > 0 {
		i -= len(m.CarId)
		copy(dAtA[i:], m.CarId)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.CarId)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Birthday) > 0 {
		i -= len(m.Birthday)
		copy(dAtA[i:], m.Birthday)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Birthday)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Password) > 0 {
		i -= len(m.Password)
		copy(dAtA[i:], m.Password)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Password)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.LastName) > 0 {
		i -= len(m.LastName)
		copy(dAtA[i:], m.LastName)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.LastName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FirstName) > 0 {
		i -= len(m.FirstName)
		copy(dAtA[i:], m.FirstName)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.FirstName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Review) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Review) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Review) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DeletedAt) > 0 {
		i -= len(m.DeletedAt)
		copy(dAtA[i:], m.DeletedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.DeletedAt)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.UpdatedAt) > 0 {
		i -= len(m.UpdatedAt)
		copy(dAtA[i:], m.UpdatedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.UpdatedAt)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Stars) > 0 {
		i -= len(m.Stars)
		copy(dAtA[i:], m.Stars)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Stars)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Comment) > 0 {
		i -= len(m.Comment)
		copy(dAtA[i:], m.Comment)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Comment)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.UserId) > 0 {
		i -= len(m.UserId)
		copy(dAtA[i:], m.UserId)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.UserId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.TaxiId) > 0 {
		i -= len(m.TaxiId)
		copy(dAtA[i:], m.TaxiId)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.TaxiId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Car) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Car) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Car) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.DeletedAt) > 0 {
		i -= len(m.DeletedAt)
		copy(dAtA[i:], m.DeletedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.DeletedAt)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.UpdatedAt) > 0 {
		i -= len(m.UpdatedAt)
		copy(dAtA[i:], m.UpdatedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.UpdatedAt)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x62
	}
	if m.Price != 0 {
		i = encodeVarintTaxiService(dAtA, i, uint64(m.Price))
		i--
		dAtA[i] = 0x58
	}
	if len(m.ToLocation) > 0 {
		i -= len(m.ToLocation)
		copy(dAtA[i:], m.ToLocation)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.ToLocation)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.FromLocation) > 0 {
		i -= len(m.FromLocation)
		copy(dAtA[i:], m.FromLocation)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.FromLocation)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.FreeDays) > 0 {
		i -= len(m.FreeDays)
		copy(dAtA[i:], m.FreeDays)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.FreeDays)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Number) > 0 {
		i -= len(m.Number)
		copy(dAtA[i:], m.Number)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Number)))
		i--
		dAtA[i] = 0x3a
	}
	if m.NumberBags != 0 {
		i = encodeVarintTaxiService(dAtA, i, uint64(m.NumberBags))
		i--
		dAtA[i] = 0x30
	}
	if m.NumberPassenger != 0 {
		i = encodeVarintTaxiService(dAtA, i, uint64(m.NumberPassenger))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Colour) > 0 {
		i -= len(m.Colour)
		copy(dAtA[i:], m.Colour)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Colour)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Model) > 0 {
		i -= len(m.Model)
		copy(dAtA[i:], m.Model)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Model)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTaxiService(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTaxiService(dAtA []byte, offset int, v uint64) int {
	offset -= sovTaxiService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *TaxiToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RefreshToken)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *EmailRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckTaxi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Field)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CheckRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Exists {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAllTaxisRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovTaxiService(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovTaxiService(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetAllTaxisResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.AllTaxis) > 0 {
		for _, e := range m.AllTaxis {
			l = e.Size()
			n += 1 + l + sovTaxiService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TaxiRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TaxiId)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Taxi) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.FirstName)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.LastName)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Password)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Birthday)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.CarId)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.PhoneNumber)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Gender)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.ProfilePhoto)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.DeletedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.RefreshToken)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Review) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.TaxiId)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.UserId)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Comment)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Stars)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.DeletedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Car) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Model)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.Colour)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.NumberPassenger != 0 {
		n += 1 + sovTaxiService(uint64(m.NumberPassenger))
	}
	if m.NumberBags != 0 {
		n += 1 + sovTaxiService(uint64(m.NumberBags))
	}
	l = len(m.Number)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.FreeDays)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.FromLocation)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.ToLocation)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.Price != 0 {
		n += 1 + sovTaxiService(uint64(m.Price))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	l = len(m.DeletedAt)
	if l > 0 {
		n += 1 + l + sovTaxiService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovTaxiService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTaxiService(x uint64) (n int) {
	return sovTaxiService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *TaxiToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaxiToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaxiToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefreshToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EmailRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmailRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmailRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckTaxi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckTaxi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckTaxi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Field", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Field = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CheckRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CheckRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CheckRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exists", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Exists = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAllTaxisRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAllTaxisRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAllTaxisRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetAllTaxisResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetAllTaxisResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetAllTaxisResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllTaxis", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AllTaxis = append(m.AllTaxis, &Taxi{})
			if err := m.AllTaxis[len(m.AllTaxis)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TaxiRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TaxiRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TaxiRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaxiId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaxiId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Taxi) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Taxi: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Taxi: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Password", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Password = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Birthday", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Birthday = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CarId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CarId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhoneNumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Gender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Gender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfilePhoto", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProfilePhoto = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeletedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefreshToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefreshToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Review) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Review: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Review: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaxiId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TaxiId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UserId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Comment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stars", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Stars = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeletedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Car) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Car: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Car: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Model", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Model = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Colour", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Colour = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberPassenger", wireType)
			}
			m.NumberPassenger = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumberPassenger |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NumberBags", wireType)
			}
			m.NumberBags = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NumberBags |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Number = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FreeDays", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FreeDays = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToLocation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToLocation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			m.Price = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Price |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeletedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTaxiService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTaxiService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeletedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTaxiService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTaxiService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTaxiService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTaxiService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTaxiService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTaxiService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTaxiService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTaxiService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTaxiService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTaxiService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTaxiService = fmt.Errorf("proto: unexpected end of group")
)
